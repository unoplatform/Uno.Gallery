steps:
- template: templates/gitversion.yml

- template: templates/dotnet-install-linux.yml
  parameters:
    UnoCheckParameters: '--tfm net9.0-browserwasm'

- template: templates/canary-updater.yml

- bash: |
    dotnet publish Uno.Gallery/Uno.Gallery.csproj -c Release -f net9.0-browserwasm -p:UseNativeRendering=$(UseNativeRendering) -p:InformationalVersion=$(NBGV_InformationalVersion) -o "$(Agent.TempDirectory)/wasm-publish" -bl:$(Build.ArtifactStagingDirectory)/wasm-publish.binlog
  displayName: 'Builds Wasm $(ArtifactName)'

- task: PublishBuildArtifacts@1
  condition: always()
  retryCountOnTaskFailure: 3
  inputs:
    PathtoPublish: '$(Agent.TempDirectory)/wasm-publish/wwwroot'
    ArtifactName: $(ArtifactName)

- task: PublishBuildArtifacts@1
  condition: always()
  retryCountOnTaskFailure: 3
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: $(ArtifactName)-logs

- template: templates/performance/collect-performance-metrics.yml
  parameters:
    ArtifactDirectory: $(Agent.TempDirectory)/
    PackageFolder: $(Agent.TempDirectory)/wasm-publish/wwwroot/
    ScriptPath: $(build.sourcesdirectory)/build/scripts/collect-metrics-build.sh
    Platform: browserwasm

- task: PublishBuildArtifacts@1
  displayName: Publish build metrics
  inputs:
    pathToPublish: $(Agent.TempDirectory)/metrics
    ArtifactName: build-metrics-wasm
  condition: succeededOrFailed()