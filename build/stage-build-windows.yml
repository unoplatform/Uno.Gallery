steps:
- template: templates/canary-updater.yml
- template: templates/gitversion.yml

- task: UseDotNet@2
  displayName: 'Use .NET'
  inputs:
    packageType: 'sdk'
    version: '9.0.200'
    includePreviewVersions: true

- script: |
    cd $(build.sourcesdirectory)/Uno.Gallery
    dotnet publish -c Release -f net9.0-windows10.0.19041 -p:TargetFrameworkOverride=net9.0-windows10.0.19041 /p:Platform=$(ApplicationPlatform) /p:AppxPackageDir="Packages/" /p:AppxBundle=Never /p:UapAppxPackageBuildMode=SideloadOnly /p:GenerateAppxPackageOnBuild=true /bl:$(build.artifactstagingdirectory)/build.binlog "/p:InformationalVersion=$(NBGV_InformationalVersion)"
  displayName: Build project for Release

- task: CopyFiles@2
  displayName: Copy Windows output
  inputs:
    SourceFolder: $(build.sourcesdirectory)/Uno.Gallery/Packages
    Contents: '**/*.*'
    TargetFolder: $(Build.ArtifactStagingDirectory)/

- task: PowerShell@2
  displayName: Authenticode Sign Packages
  inputs:
    filePath: build/Sign-Package.ps1
  env:
    VaultSignTenantId: $(VaultSignTenantId)
    VaultSignClientId: $(VaultSignClientId)
    VaultSignClientSecret: $(VaultSignClientSecret)
    VaultSignCertificate: $(VaultSignCertificate)
    VaultSignUrl: $(VaultSignUrl)
    SignPackageName: "Uno Platform Gallery"
    SignPackageDescription: "The Uno Platform"
    ArtifactDirectory: $(build.artifactstagingdirectory)
  condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['VaultSignClientSecret'], '')), not(eq(variables['VaultSignClientId'], '')))

- task: PublishBuildArtifacts@1
  condition: always()
  retryCountOnTaskFailure: 3
  inputs:
    ArtifactName: windows
