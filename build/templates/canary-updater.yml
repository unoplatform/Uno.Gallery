
steps:
  - task: unoplatformCanaryUpdater@1
    displayName: 'Canary Update (dev)'
    condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries/dev')
    inputs:
      solution: '$(build.sourcesdirectory)'
      useNuGetOrg: true
      usePrivateFeed: false
      mergeBranch: true
      branchToMerge: master
      nugetUpdaterVersion: '1.2.10'
      packageAuthor: 'nventive,uno platform'
      summaryFile: '$(Build.ArtifactStagingDirectory)/Canary.md'

  - task: unoplatformCanaryUpdater@1
    displayName: 'Canary Update (skia-everywhere)'
    condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries/skia-everywhere')
    inputs:
      solution: '$(build.sourcesdirectory)'
      usePrivateFeed: false
      useNuGetOrg: true
      mergeBranch: true
      branchToMerge: master
      nugetUpdaterVersion: '1.2.10'
      nugetVersion: dev
      packageAuthor: 'nventive,unoplatform,uno platform'
      summaryFile: '$(Build.ArtifactStagingDirectory)/Summary.md'
      resultFile: '$(Build.ArtifactStagingDirectory)/Results.json'
      # additionalPublicSources: 'https://pkgs.dev.azure.com/uno-platform/1dd81cbd-cb35-41de-a570-b0df3571a196/_packaging/Features/nuget/v3/index.json'

  #- pwsh: |
  #    cd $(build.sourcesdirectory)
  #    dotnet nuget add source https://pkgs.dev.azure.com/uno-platform/1dd81cbd-cb35-41de-a570-b0df3571a196/_packaging/Features/nuget/v3/index.json -n unofeatures
  #  condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries/skia-everywhere')
  #  displayName: 'Use uno features source'

  - pwsh: |
        dotnet nuget add source --name skia-eap "https://aka.ms/skiasharp-eap/index.json"
    displayName: Add SkiaSharp EAP feed

  - powershell: |
      cat global.json
    condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries')

  - powershell: |
      dotnet tool uninstall uno.nuget.updater.tool --tool-path $(Agent.TempDirectory)
    condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries')

  - pwsh: |
      gci -r -include "Uno.Gallery.csproj" |
      foreach-object {
          $a = $_.fullname; ( get-content $a ) |
          foreach-object { $_ -replace "uno.platform.gallery.native","uno.platform.gallery.native-canary" } |
          set-content $a }
    displayName: 'Adjust info.plist bundle name (skia)'
    condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries')
  - pwsh: |
      gci -r -include "Uno.Gallery.csproj" |
      foreach-object {
          $a = $_.fullname; ( get-content $a ) |
          foreach-object { $_ -replace "uno.platform.gallery_native","uno.platform.gallery_native-canary" } |
          set-content $a }
    displayName: 'Adjust info.plist bundle name (Android Native)'
    condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries')

  - pwsh: |
      gci -r -include "Uno.Gallery.csproj" |
      foreach-object {
          $a = $_.fullname; ( get-content $a ) |
          foreach-object { $_ -replace "com.nventive.uno.ui.demo","com.nventive.uno.ui.demo.canary" } |
          set-content $a }
    displayName: 'Adjust info.plist bundle name (Android Skia)'
    condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries')

  - pwsh: |
      gci -r -include "Uno.Gallery.csproj" |
      foreach-object {
          $a = $_.fullname; ( get-content $a ) |
          foreach-object { $_ -replace "com.nventive.uno.gallery","com.nventive.uno.gallery-canary" } |
          set-content $a }
    displayName: 'Adjust info.plist bundle name (Catalyst)'
    condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries')
