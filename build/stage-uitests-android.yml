jobs:
- job: Android_Tests_Build
  displayName: 'Android UI Tests'
  timeoutInMinutes: 90
  variables:
    CI_Build: true
    SourceLinkEnabled: false

  pool:
    vmImage: 'ubuntu-24.04'

  steps:
  - checkout: self
    clean: true
    fetchDepth: 0
    persistCredentials: true

  - template: templates/dotnet-install-linux.yml
    parameters:
      UnoCheckParameters: '--tfm net9.0-android'

  - template: templates/canary-updater.yml

  - bash: |
      chmod +x $(build.sourcesdirectory)/build/scripts/android-uitest-build.sh
      $(build.sourcesdirectory)/build/scripts/android-uitest-build.sh
    displayName: Build Android Tests
    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"
      BUILD_ARTIFACTSTAGINGDIRECTORY: "$(build.artifactstagingdirectory)"

  - task: CopyFiles@2
    displayName: Copy Build Output
    inputs:
      SourceFolder: $(build.sourcesdirectory)/Uno.Gallery/bin/Release/net8.0-android/android-x64
      Contents: '**/*.apk'
      TargetFolder: $(Build.ArtifactStagingDirectory)

  - publish: $(Build.ArtifactStagingDirectory)
    artifact: Android_UITest


- job: Android_Tests
  displayName: 'Android UI Tests'
  dependsOn: Android_Tests_Build
  timeoutInMinutes: 60
  variables:
    CI_Build: true
    SourceLinkEnabled: false

  pool:
    vmImage: 'macos-14'

  steps:
  - checkout: self
    clean: true
    persistCredentials: true

  - download: current
    artifact: Android_UITest

  - template: templates/canary-updater.yml

  - task: PowerShell@2
    displayName: 'Install coreutils'
    inputs:
      targetType: inline
      script: |
        brew install coreutils

  - bash: |
      export UNO_UITEST_ANDROIDAPK_BASEPATH=$(Pipeline.Workspace)/Android_UITest
      chmod +x $(build.sourcesdirectory)/build/scripts/android-uitest-run.sh
      $(build.sourcesdirectory)/build/scripts/android-uitest-run.sh
    displayName: Run Android Tests
    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"
      BUILD_ARTIFACTSTAGINGDIRECTORY: "$(build.artifactstagingdirectory)"

  - task: PublishTestResults@2
    condition: always()
    retryCountOnTaskFailure: 3
    inputs:
      testRunTitle: 'Android Test Run'
      testResultsFormat: 'NUnit'
      testResultsFiles: '$(build.sourcesdirectory)/build/TestResult.xml'
      failTaskOnFailedTests: true
      failTaskOnMissingResultsFile: true

  - task: PublishBuildArtifacts@1
    condition: always()
    retryCountOnTaskFailure: 3
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uno-uitest-tests
      ArtifactType: Container

