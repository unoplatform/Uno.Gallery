trigger:
  branches:
    include:
      - master
      - beta
      - release/beta/*
      - stable
      - release/stable/*
      - legacy/*

  paths:
    include:
    - '/'
    exclude:
    - .dependabot/
    - .github/
    # don't trigger the CI if only docs files are changed
    - doc/*
    - '**/*.md'

pr:
  branches:
    include:
      - master
      - beta
      - release/beta/*
      - stable
      - release/stable/*
      - legacy/*

  paths:
    include:
    - '/'
    exclude:
    - .dependabot/
    - .github/
    # don't trigger the CI if only docs files are changed
    - doc/*
    - '**/*.md'

variables:
  IsLightBuild: $[eq(variables['Build.Reason'], 'PullRequest')]
  IsCanaryBranch: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries/')]

  XCODE_ROOT: '/Applications/Xcode_16.1.app'
  XCODE_ROOT_UITESTS: '/Applications/Xcode_15.3.app'

  # Required to about trashing azdo hosted agents
  AotCompileMaxDegreeOfParallelism: 3

stages:
- stage: Android
  displayName: 'Android'
  dependsOn: []
  jobs:
  - job: Windows_Android_Mobile
    strategy:
      matrix:
        Android_Store:
          ApplicationPlatform: AnyCPU
          ArtifactName: Android
          BuildForPlayStore: True
          VersionCodeOffset: 1
          UseNativeRendering: true
          VariantName: Native
        Android_Skia_Store:
          ApplicationPlatform: AnyCPU
          ArtifactName: Android
          BuildForPlayStore: True
          VersionCodeOffset: 1
          UseNativeRendering: false
          VariantName: Skia

    pool:
      vmImage: windows-2022

    variables:
    - group: 'UADO Keystore' # Import all variables for the signing from the library in azure devops

    steps:
    - template: build/stage-build-android-mobile.yml


- stage: Windows
  displayName: 'Windows'
  dependsOn: []
  jobs:
  - job: Windows_WinAppSDK
    pool:
      vmImage: windows-2022

    variables:
    - group: 'UADO Keystore' # Import all variables for the Android signing from the library in azure devops
    - group: 'Uno Platform authenticode signing' # Import all variables for the signing from the library in azure devops
    - name: ApplicationPlatform
      value: x86 # switch back to x64 once CommunityToolkit.WinUI.UI supports x64 (https://github.com/CommunityToolkit/Lottie-Windows/issues/515#issuecomment-1662305826)
    - name: BuildTargetFramework
      value: net9.0-windows10.0.19041
    - name: ArtifactName
      value: Windows
    - name: VersionCodeOffset
      value: 50
    - name: PackageOutputPath
      value: $(Build.ArtifactStagingDirectory)

    steps:
    - template: build/stage-build-windows.yml

- stage: Skia_Desktop
  displayName: 'Skia Desktop'
  dependsOn: []
  jobs:
  - job: Windows_Desktop
    pool:
      vmImage: windows-2022
  
    variables:
    - group: 'UADO Keystore' # Import all variables for the signing from the library in azure devops
  
    steps:
    - template: build/stage-build-skia-desktop.yml
    - template: build/canary-diagnostic/stage-diagnostic-skia-desktop-canary.yml

- stage: Apple
  displayName: 'Apple'
  dependsOn: []
  jobs:
  - job: macOS_netcore
    timeoutInMinutes: 90
    strategy:
      matrix:
        iOS:
          BuildTargetFramework: net9.0-ios
          ArtifactName: iOS-mobile
          ApplicationBuildNumberOffset: 50
          BuildCommand: publish
          UseNativeRendering: true
          VariantName: Native
        Catalyst:
          BuildTargetFramework: net9.0-maccatalyst
          ArtifactName: Catalyst
          ApplicationBuildNumberOffset: 50
          BuildCommand: build
          UseNativeRendering: true
          VariantName: Native
        iOS_Skia:
          BuildTargetFramework: net9.0-ios
          ArtifactName: iOS-mobile
          ApplicationBuildNumberOffset: 50
          BuildCommand: publish
          UseNativeRendering: false
          VariantName: Skia
        Catalyst_Skia:
          BuildTargetFramework: net9.0-maccatalyst
          ArtifactName: Catalyst
          ApplicationBuildNumberOffset: 50
          BuildCommand: build
          UseNativeRendering: false
          VariantName: Skia
    pool:
      vmImage: macos-15
  
    variables:
    - name: SkipUnknownFrameworks
      value: true # Used by TargetFrameworks.Filtering package
    - group: unoplatform.apple.ios.appstore.distribution
  
    steps:
    - task: InstallAppleCertificate@2
      displayName: Install Certificate
      inputs:
        certSecureFile: UnoPlatform-Apple-Distribution.p12
        certPwd: $(appleappstorecertificatepassword)
        keychain: temp
        # disabled because of azure devops failing to uninstall as of 2022-11-16
        # deleteCert: true
  
    - task: InstallAppleCertificate@2
      displayName: Install Certificate
      inputs:
        certSecureFile: UnoPlatform-MacInstaller.p12
        certPwd: $(appleappstorecertificatepassword)
        keychain: temp
        # disabled because of azure devops failing to uninstall as of 2022-11-16
        # deleteCert: true

    #
    # Gallery Skia
    #
    - task: InstallAppleProvisioningProfile@1
      displayName: 'Install Apple Provisioning Profile'
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: Uno_Gallery_Catalyst.provisionprofile
  
    - task: InstallAppleProvisioningProfile@1
      displayName: 'Install Apple Provisioning Profile'
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: Uno_Gallery_Canary_Catalyst.provisionprofile
  
    - task: InstallAppleProvisioningProfile@1
      displayName: 'Install Apple Provisioning Profile'
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: Uno_Gallery_iOS.mobileprovision
  
    - task: InstallAppleProvisioningProfile@1
      displayName: 'Install Apple Provisioning Profile'
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: Uno_Gallery_Canary_iOS.mobileprovision

    #
    # Gallery Native
    #
      
    - task: InstallAppleProvisioningProfile@1
      displayName: 'Install Apple Provisioning Profile'
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: Uno_Gallery_Native_Catalyst.provisionprofile
  
    - task: InstallAppleProvisioningProfile@1
      displayName: 'Install Apple Provisioning Profile'
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: Uno_Gallery_Native_Canary_Catalyst.provisionprofile
  
    - task: InstallAppleProvisioningProfile@1
      displayName: 'Install Apple Provisioning Profile'
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: Uno_Gallery_Native_iOS.mobileprovision
  
    - task: InstallAppleProvisioningProfile@1
      displayName: 'Install Apple Provisioning Profile'
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: Uno_Gallery_Native_Canary_iOS.mobileprovision


    - template: build/templates/xcode-select.yml
      parameters:
        xCodeRoot: $(XCODE_ROOT)
  
    - template: build/stage-build-mobile.yml

- stage: WebAssembly
  displayName: 'WebAssembly'
  dependsOn: []
  jobs:
  - job: WebAssembly
    timeoutInMinutes: 60

    pool:
      vmImage: ubuntu-latest

    strategy:
      matrix:
        DOM:
          ArtifactName: WASM-DOM
          UseNativeRendering: true
        Skia:
          ArtifactName: WASM-Skia
          UseNativeRendering: false

    variables:
      SkipUnknownFrameworks: true

    steps:
      - template: build/stage-build-wasm.yml
 
- stage: WebAssembly_Tests
  displayName: 'WebAssembly Tests'
  dependsOn: []
  jobs:
  - template: build/stage-uitests-wasm.yml

- stage: iOS_Tests
  displayName: 'iOS Tests'
  dependsOn: []
  jobs:
  - template: build/stage-uitests-ios.yml

# Disabled for ANR issue on the hosted agents with System.UI    
# - stage: Android_Tests
#   displayName: 'Android Tests'
#   dependsOn: []
#   jobs:
#   - template: build/stage-uitests-android.yml

- ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries/dev') }}:
  - template: build/templates/canary-publish/stage-publish-wasm-canary.yml
  - template: build/templates/canary-publish/stage-publish-ios-canary.yml
  - template: build/templates/canary-publish/stage-publish-catalyst-canary.yml
  - template: build/templates/canary-publish/stage-publish-android-canary.yml

- ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/master') }}:
  - template: build/templates/master-publish/stage-publish-wasm.yml
  - template: build/templates/master-publish/stage-publish-ios.yml
  - template: build/templates/master-publish/stage-publish-catalyst.yml
  - template: build/templates/master-publish/stage-publish-android.yml
