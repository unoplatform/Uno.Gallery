<Page x:Class="Uno.Gallery.Views.Samples.GyrometerSamplePage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
	  xmlns:smtx="using:ShowMeTheXAML"
	  xmlns:local="using:Uno.Gallery"
	  mc:Ignorable="d">

	<Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
		<local:SamplePageLayout IsDesignAgnostic="True">
			<local:SamplePageLayout.DesignAgnosticTemplate>
				<DataTemplate>
					<StackPanel>
						<smtx:XamlDisplay UniqueKey="GyrometerSamplePage_Sample"
										  smtx:XamlDisplayExtensions.Header="Gyrometer">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="auto" />
									<RowDefinition Height="auto" />
								</Grid.RowDefinitions>
								<!-- C# code
var gyrometer = Gyrometer.GetDefault();
gyrometer.ReadingChanged += Gyrometer_ReadingChanged;

private async void Gyrometer_ReadingChanged(Gyrometer sender, GyrometerReadingChangedEventArgs args)
{
    // If you want to update the UI in some way, ensure the Dispatcher is used,
    // as the ReadingChanged event handler does not run on the UI thread.
    await Dispatcher.RunAsync(CoreDispatcherPriority.Normal, () =>
    {
        AngularVelocityX = args.Reading.AngularVelocityX;
        AngularVelocityY = args.Reading.AngularVelocityY;
        AngularVelocityZ = args.Reading.AngularVelocityZ;
        Timestamp = args.Reading.Timestamp.ToString("R");
    });
}
-->

								<StackPanel Visibility="{Binding Data.GyrometerAvailable}"
											Spacing="8"
											Margin="0,0,0,20">
									<TextBlock>
									<LineBreak />
									<Span FontWeight="Bold">Angular Velocity X: </Span>
									<Run Text="{Binding Data.AngularVelocityX}" />
									<LineBreak />
									<Span FontWeight="Bold">Angular Velocity Y:</Span>
									<Run Text="{Binding Data.AngularVelocityY}" />
									<LineBreak />
									<Span FontWeight="Bold">Angular Velocity Z: </Span>
									<Run Text="{Binding Data.AngularVelocityZ}" />
									<LineBreak />
									<Span FontWeight="Bold">Last read timestamp: </Span>
									<Run Text="{Binding Data.LastReadTimestamp}" />
									</TextBlock>

									<muxc:NumberBox Value="{Binding Data.ReportInterval, Mode=TwoWay}"
													Header="Report Interval (milliseconds)"
													Minimum="0"
													SpinButtonPlacementMode="Inline" />
								</StackPanel>

								<Button IsEnabled="{Binding Data.GyrometerAvailable}"
										Grid.Row="1"
										Click="ObserveReadingChangeButton_Click">
									<TextBlock Text="{Binding Data.ButtonContent}"
											   VerticalAlignment="Stretch"
											   TextAlignment="Center" />
								</Button>
							</Grid>
						</smtx:XamlDisplay>
					</StackPanel>
				</DataTemplate>
			</local:SamplePageLayout.DesignAgnosticTemplate>

		</local:SamplePageLayout>
	</Grid>
</Page>
