<Page x:Class="Uno.Gallery.Views.Samples.PedometerSamplePage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:smtx="using:ShowMeTheXAML"
	  xmlns:local="using:Uno.Gallery"
	  mc:Ignorable="d">

	<Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
		<local:SamplePageLayout IsDesignAgnostic="True">
			<local:SamplePageLayout.DesignAgnosticTemplate>
				<DataTemplate>
					<StackPanel>
						<smtx:XamlDisplay UniqueKey="PedometerSamplePage_Sample"
										  smtx:XamlDisplayExtensions.IgnorePath="XX"
										  smtx:XamlDisplayExtensions.Header="Pedometer">
							<StackPanel Spacing="16">
<!-- C# code
var pedometer = await Pedometer.GetDefaultAsync();
pedometer.ReportInterval = 10000;
pedometer.ReadingChanged += Pedometer_ReadingChanged;

private async void Pedometer_ReadingChanged(Pedometer sender, PedometerReadingChangedEventArgs args)
{
	// If you want to update the UI in some way, ensure the Dispatcher is used,
	// as the ReadingChanged event handler does not run on the UI thread.
	await Dispatcher.RunAsync(CoreDispatcherPriority.Normal, () =>
	{
		CumulativeSteps = args.Reading.CumulativeSteps;
		CumulativeStepsDurationInSeconds = args.Reading.CumulativeStepsDuration.TotalSeconds;
		Timestamp = args.Reading.Timestamp.ToString("R");
	});
}
-->
								<TextBlock Visibility="{Binding Data.PedometerAvailable}">
									<Span FontWeight="Bold">Steps:</Span>
									<Run Text="{Binding Data.Steps}" />
									<LineBreak />

									<Span FontWeight="Bold">Duration:</Span>
									<Run Text="{Binding Data.Duration}" />
									<LineBreak />

									<Span FontWeight="Bold">Last read timestamp:</Span>
									<Run Text="{Binding Data.LastReadTimestamp}" />
								</TextBlock>
								<Button IsEnabled="{Binding Data.PedometerAvailable}"
										Click="ObserveReadingChangeButton_Click">
									<TextBlock Text="{Binding Data.ButtonContent}"
											   VerticalAlignment="Stretch"
											   TextAlignment="Center" />
								</Button>
								<TextBlock Text="{Binding Data.ErrorMessage}" />
							</StackPanel>
						</smtx:XamlDisplay>
					</StackPanel>
				</DataTemplate>
			</local:SamplePageLayout.DesignAgnosticTemplate>

		</local:SamplePageLayout>
	</Grid>
</Page>
