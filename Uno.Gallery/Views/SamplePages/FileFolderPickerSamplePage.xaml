<Page x:Class="Uno.Gallery.Views.Samples.FileFolderPickerSamplePage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:local="using:Uno.Gallery"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:smtx="using:ShowMeTheXAML"
	  mc:Ignorable="d">

	<Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
		<local:SamplePageLayout IsDesignAgnostic="True">

			<local:SamplePageLayout.DesignAgnosticTemplate>
				<DataTemplate>
					<StackPanel>
						<smtx:XamlDisplay UniqueKey="FileFolderPickerSamplePage_PickFile"
										  smtx:XamlDisplayExtensions.Header="Pick a single file">
							<Button Content="Open file" Click="PickFileButton_Click"/>
							<!--
private async void PickFileButton_Click(object sender, RoutedEventArgs e)
{
	var picker = new FileOpenPicker();
	picker.FileTypeFilter.Add("*");
	var storageFile = await picker.PickSingleFileAsync();

	if (storageFile != null)
	{
		// Successfully picked file.
	}
	else
	{
		// Did not pick any file.
	}
}
-->
						</smtx:XamlDisplay>
						
						<smtx:XamlDisplay UniqueKey="FileFolderPickerSamplePage_PickMultipleFiles"
										  smtx:XamlDisplayExtensions.Header="Pick multiple files">
							<Button Content="Open files" Click="PickMultipleFilesButton_Click"/>
							<!--
private async void PickMultipleFilesButton_Click(object sender, RoutedEventArgs e)
{
	var picker = new FileOpenPicker();
	picker.FileTypeFilter.Add("*");
	var storageFiles = await picker.PickMultipleFilesAsync();

	if (storageFiles != null && storageFiles.Any())
	{
		foreach (var file in storageFiles)
		{
			// Do something with the picked files.
		}
	}
	else
	{
		// Did not pick any file.
	}
}
-->
						</smtx:XamlDisplay>

						<smtx:XamlDisplay UniqueKey="FileFolderPickerSamplePage_PickSpecificFiles"
										  smtx:XamlDisplayExtensions.Header="Pick specific file types">
							<Button Content="Open images" Click="PickSpecificFilesButton_Click"/>
							<!--
private async void PickSpecificFilesButton_Click(object sender, RoutedEventArgs e)
{
	var picker = new FileOpenPicker();
	picker.SuggestedStartLocation = PickerLocationId.PicturesLibrary;
	picker.FileTypeFilter.Add(".jpg");
	picker.FileTypeFilter.Add(".jpeg");
	picker.FileTypeFilter.Add(".png");
	picker.FileTypeFilter.Add(".bmp");
	var storageFiles = await picker.PickMultipleFilesAsync();

	if (storageFiles != null && storageFiles.Any())
	{
		foreach (var file in storageFiles)
		{
			var bitmap = new BitmapImage();
			using (var stream = await file.OpenReadAsync())
			{
				await bitmap.SetSourceAsync(stream);
			}
			// Display this bitmap.
		}
	}
	else
	{
		// Did not pick any file.
	}
}
-->
						</smtx:XamlDisplay>

						<smtx:XamlDisplay UniqueKey="FileFolderPickerSamplePage_PickFolder"
										  smtx:XamlDisplayExtensions.Header="Pick a folder">
							<Button Content="Open folder" Click="PickFolderButton_Click"/>
							<!--
private async void PickFolderButton_Click(object sender, RoutedEventArgs e)
{
	var folderPicker = new FolderPicker();
	folderPicker.FileTypeFilter.Add("*");

	var storageFolder = await folderPicker.PickSingleFolderAsync();
	if (storageFolder != null)
	{
		var fileList = await storageFolder.GetFilesAsync();
		var folderList = await storageFolder.GetFoldersAsync();

		// Do something with the contents...
	}
	else
	{
		// Did not pick any folder.
	}
}
-->
						</smtx:XamlDisplay>

						<smtx:XamlDisplay UniqueKey="FileFolderPickerSamplePage_PickSaveFile"
										  smtx:XamlDisplayExtensions.Header="Pick and save to file"
										  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\StackPanel">
							<StackPanel Spacing="10">
								<TextBox PlaceholderText="Type your file contents here..." x:Name="ContentTextBox" />
								<Button Content="Save to file" Click="SaveFileButton_Click"/>
								<!--
private async void SaveFileButton_Click(object sender, RoutedEventArgs e)
{
	var picker = new FileSavePicker();
	picker.FileTypeChoices.Add("Text files", new[] { ".txt" });
	var storageFile = await picker.PickSaveFileAsync();

	if (storageFile != null)
	{
		var textBox = ((sender as Button).Parent as StackPanel)
			.FindName("ContentTextBox") as TextBox;
		using (var stream = await storageFile.OpenStreamForWriteAsync())
		{
			using (var tw = new StreamWriter(stream))
			{
				tw.WriteLine(textBox?.Text);
			}
		}
	}
	else
	{
		// Did not pick any file.
	}
}
-->
							</StackPanel>
						</smtx:XamlDisplay>

						<smtx:XamlDisplay UniqueKey="FileFolderPickerSamplePage_PickSaveMultipleFiles"
										  smtx:XamlDisplayExtensions.Header="Pick folder and save to files"
										  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\StackPanel">
							<StackPanel Spacing="10">
								<TextBox PlaceholderText="file1.txt contents..." x:Name="ContentTextBox1" />
								<TextBox PlaceholderText="file2.txt contents..." x:Name="ContentTextBox2" />
								<Button Content="Save files" Click="SaveMultipleFilesButton_Click"/>
								<!--
private async void SaveMultipleFilesButton_Click(object sender, RoutedEventArgs e)
{
	var folderPicker = new FolderPicker();
	folderPicker.FileTypeFilter.Add("*");

	var storageFolder = await folderPicker.PickSingleFolderAsync();
	if (storageFolder != null)
	{
		var storageFile1 = await storageFolder.CreateFileAsync("file1.txt", CreationCollisionOption.ReplaceExisting);
		var storageFile2 = await storageFolder.CreateFileAsync("file2.txt", CreationCollisionOption.ReplaceExisting);

		using (var stream = await storageFile1.OpenStreamForWriteAsync())
		{
			// write to file 1...
		}

		using (var stream = await storageFile2.OpenStreamForWriteAsync())
		{
			// write to file 2...
		}
	}
	else
	{
		// Did not pick any folder.
	}
}
-->
							</StackPanel>
						</smtx:XamlDisplay>
					</StackPanel>
				</DataTemplate>
			</local:SamplePageLayout.DesignAgnosticTemplate>
		</local:SamplePageLayout>
	</Grid>

</Page>
