<Page
	x:Class="Uno.Gallery.Views.Samples.AccelerometerSamplePage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:Uno.Gallery"
	xmlns:samples="using:Uno.Gallery.Views.Samples"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
	xmlns:smtx="using:ShowMeTheXAML"
	mc:Ignorable="d">

	<Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
		<local:SamplePageLayout IsDesignAgnostic="True">
			<local:SamplePageLayout.DesignAgnosticTemplate>
				<DataTemplate>
					<StackPanel>
						<smtx:XamlDisplay UniqueKey="AccelerometerSamplePage_Sample"
										  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\StackPanel"
										  smtx:XamlDisplayExtensions.Header="Accelerometer">
							<StackPanel Spacing="20">
								<!-- C# code
var accelerometer = Accelerometer.GetDefault();
			
if (accelerometer != null)
{
	accelerometer.Shaken += Accelerometer_Shaken;
	accelerometer.ReadingChanged += Accelerometer_ReadingChanged;
}
else
{
	// Accelerometer is not available on this platform/device.
}

private void Accelerometer_Shaken(Accelerometer sender, AccelerometerShakenEventArgs args)
{
	LastShakeTimestamp = args.Timestamp;
	++ShakeCount;
}

private async void Accelerometer_ReadingChanged(Accelerometer sender, AccelerometerReadingChangedEventArgs args)
{
	await CoreApplication.MainView.CoreWindow.Dispatcher.RunAsync(CoreDispatcherPriority.Normal, () => {
		LastReadTimestamp = args.Reading.Timestamp;
		AccelerationX = args.Reading.AccelerationX;
		AccelerationY = args.Reading.AccelerationY;
		AccelerationZ = args.Reading.AccelerationZ;
	});
}
-->
								
								<StackPanel.DataContext>
									<samples:AccelerometerSamplePageViewModel />
								</StackPanel.DataContext>

								<TextBlock>
									<LineBreak />
									<Span>Device shaked </Span>
									<Run Text="{Binding ShakeCount}" />
									<Span> time(s).</Span>
									<LineBreak />
									<Span FontWeight="Bold">Last shake timestamp: </Span>
									<Run Text="{Binding LastShakeTimestamp}" />
								</TextBlock>

								<TextBlock>
									<LineBreak />
									<Span FontWeight="Bold">Acceleration X: </Span>
									<Run Text="{Binding AccelerationX}" />
									<LineBreak />
									<Span FontWeight="Bold">Acceleration Y: </Span>
									<Run Text="{Binding AccelerationY}" />
									<LineBreak />
									<Span FontWeight="Bold">Acceleration Z: </Span>
									<Run Text="{Binding AccelerationZ}" />
									<LineBreak />
									<Span FontWeight="Bold">Last read timestamp: </Span>
									<Run Text="{Binding LastReadTimestamp}" />
								</TextBlock>

								<muxc:NumberBox Value="{Binding ReportInterval, Mode=TwoWay}"
												Header="Report Interval (milliseconds)"
												IsEnabled="{Binding AccelerometerAvailable}"
												SpinButtonPlacementMode="Inline" />

								<Button IsEnabled="{Binding AccelerometerAvailable}" Click="ObserveReadingChangeButton_Click">
									<TextBlock Text="{Binding ButtonContent}" VerticalAlignment="Stretch" TextAlignment="Center" />
								</Button>
							</StackPanel>
						</smtx:XamlDisplay>
					</StackPanel>
				</DataTemplate>
			</local:SamplePageLayout.DesignAgnosticTemplate>

		</local:SamplePageLayout>
	</Grid>
</Page>
