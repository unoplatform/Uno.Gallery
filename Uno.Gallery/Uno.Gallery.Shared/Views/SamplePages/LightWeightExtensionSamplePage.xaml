<Page x:Class="Uno.Gallery.Views.SamplePages.LightWeightExtensionSamplePage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:local="using:Uno.Gallery"
	  xmlns:smtx="using:ShowMeTheXAML"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:example="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  mc:Ignorable="d example"
	  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

	<Grid>
		<local:SamplePageLayout>
			<local:SamplePageLayout.MaterialTemplate>
				<DataTemplate>
					<StackPanel>
						<!-- Button -->
						<smtx:XamlDisplay UniqueKey="LightweightExtensionSamplePage_Button_Material"
										  smtx:XamlDisplayExtensions.Description="The examples contrast ordinary Buttons with others that apply an Extension to override some properties, as defined in the Material/Buttons.xaml ResourceDictionary."
										  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\StackPanel">
							<StackPanel Spacing="40">

								<Button Content="Default Button Style"
										Style="{StaticResource MaterialFilledButtonStyle}" />

								<Button Content="Overridden Button Style"
										BorderThickness="2"
										Style="{StaticResource OverridenMaterialButton}" />

								<!-- OverridenMaterialButton defintion: -->
								<example:ResourceDictionary>
									<Style x:Key="OverridenMaterialButton"
										   BasedOn="{StaticResource MaterialFilledButtonStyle}"
										   TargetType="Button">
										<Setter Property="local:ResourceExtensions.OverridePath" Value="ms-appx:///Views/ControlResourcesOverride/Material/Button.xaml" />
									</Style>
								</example:ResourceDictionary>


								<Button Content="Default Button Style - Disabled"
										IsEnabled="False"
										Style="{StaticResource MaterialFilledButtonStyle}" />

								<Button Content="Overridden Button Style - Disabled"
										BorderThickness="2"
										IsEnabled="False"
										Style="{StaticResource MaterialFilledButtonStyle}"
										local:ResourceExtensions.OverridePath="ms-appx:///Views/ControlResourcesOverride/Material/Button.xaml" />

								<!-- Material/Button.xaml content: -->
								<example:ResourceDictionary>
									<SolidColorBrush x:Key="FilledButtonForeground" Color="DarkGreen" />
									<SolidColorBrush x:Key="FilledButtonBackground" Color="LightGreen" />
									<SolidColorBrush x:Key="FilledButtonBorderBrush" Color="DarkGreen" />

									<SolidColorBrush x:Key="FilledButtonForegroundPointerOver" Color="DarkRed" />
									<SolidColorBrush x:Key="FilledButtonBackgroundPointerOver" Color="LightPink" />
									<SolidColorBrush x:Key="FilledButtonBorderBrushPointerOver" Color="DarkRed" />

									<SolidColorBrush x:Key="FilledButtonForegroundPressed" Color="DarkBlue" />
									<SolidColorBrush x:Key="FilledButtonBackgroundPressed" Color="LightSteelBlue" />
									<SolidColorBrush x:Key="FilledButtonBorderBrushPressed" Color="DarkBlue" />

									<SolidColorBrush x:Key="FilledButtonForegroundFocused" Color="AntiqueWhite" />
									<SolidColorBrush x:Key="FilledButtonBackgroundFocused" Color="DarkMagenta" />
									<SolidColorBrush x:Key="FilledButtonBorderBrushFocused" Color="AntiqueWhite" />

									<SolidColorBrush x:Key="FilledButtonForegroundDisabled" Color="LightSlateGray" />
									<SolidColorBrush x:Key="FilledButtonBackgroundDisabled" Color="DarkGray" />
									<SolidColorBrush x:Key="FilledButtonBorderBrushDisabled" Color="LightSlateGray" />
								</example:ResourceDictionary>


							</StackPanel>
						</smtx:XamlDisplay>

						<!-- TextBox -->
						<smtx:XamlDisplay UniqueKey="LightWeightExtensionSamplePage_MaterialTextBox"
										  smtx:XamlDisplayExtensions.Description="The examples contrast ordinary Buttons with others that apply an Extension to override some properties, as defined in the Material/Buttons.xaml ResourceDictionary."
										  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\StackPanel">
							<StackPanel Spacing="24">
								<TextBox PlaceholderText="Default TextBox Style"
										 Style="{StaticResource MaterialOutlinedTextBoxStyle}" />

								<TextBox PlaceholderText="Overriden TextBox Style"
										 Style="{StaticResource MaterialOutlinedTextBoxStyle}"
										 local:ResourceExtensions.OverridePath="ms-appx:///Views/ControlResourcesOverride/Material/TextBox.xaml" />

								<!-- Material/TextBox.xaml content: -->
								<example:ResourceDictionary>
									<!-- Normal State -->
									<SolidColorBrush x:Key="OutlinedTextBoxBorderBrush" Color="Red" />
									<SolidColorBrush x:Key="OutlinedTextBoxPlaceholderForeground" Color="Green" />
									<SolidColorBrush x:Key="OutlinedTextBoxForeground" Color="Orange" />

									<!-- Focused state -->
									<SolidColorBrush x:Key="OutlinedTextBoxBorderBrushFocused" Color="Lime" />
									<SolidColorBrush x:Key="OutlinedTextBoxPlaceholderForegroundFocused" Color="Navy" />
									<SolidColorBrush x:Key="OutlinedTextBoxForegroundFocused" Color="Pink" />

									<!-- Pointer over state -->
									<StaticResource x:Key="OutlinedTextBoxPlaceholderForegroundPointerOver" ResourceKey="SecondaryLowBrush" />
									<StaticResource x:Key="OutlinedTextBoxBorderBrushPointerOver" ResourceKey="SecondaryLowBrush" />
									<StaticResource x:Key="OutlinedTextBoxForegroundPointerOver" ResourceKey="PrimaryBrush" />
								</example:ResourceDictionary>

							</StackPanel>
						</smtx:XamlDisplay>

						<!-- CheckBox -->
						<smtx:XamlDisplay UniqueKey="LightWeightExtensionSamplePage_MaterialCheckBox"
										  smtx:XamlDisplayExtensions.Description="The examples contrast ordinary Buttons with others that apply an Extension to override some properties, as defined in the Material/Buttons.xaml ResourceDictionary."
										  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\StackPanel">
							<StackPanel Spacing="24">
								<CheckBox Content="Default checkbox style"
										  Style="{StaticResource MaterialCheckBoxStyle}" />
								<CheckBox Content="Overridden checkbox style"
										  Style="{StaticResource MaterialCheckBoxStyle}"
										  local:ResourceExtensions.OverridePath="ms-appx:///Views/ControlResourcesOverride/Material/CheckBox.xaml" />

								<!-- Material/CheckBox.xaml content: -->
								<example:ResourceDictionary>
									<!-- Checked state -->
									<SolidColorBrush x:Key="CheckBoxGlyphForegroundChecked" Color="Red" />
									<SolidColorBrush x:Key="CheckBoxBorderBrushChecked" Color="Green" />
									<SolidColorBrush x:Key="CheckBoxBackgroundChecked" Color="White" />

									<!-- Checked and pointer over state -->
									<SolidColorBrush x:Key="CheckBoxGlyphForegroundCheckedPointerOver" Color="Blue" />
									<SolidColorBrush x:Key="CheckBoxBorderBrushCheckedPointerOver" Color="Yellow" />
									<SolidColorBrush x:Key="CheckBoxBackgroundCheckedPointerOver" Color="Black" />

									<!-- Checked and pressed state -->
									<SolidColorBrush x:Key="CheckBoxGlyphForegroundPressed" Color="Purple" />
									<SolidColorBrush x:Key="CheckBoxBorderBrushCheckedPressed" Color="Silver" />
									<SolidColorBrush x:Key="CheckBoxBackgroundCheckedPressed" Color="Cyan" />

									<!-- Unchecked state -->
									<StaticResource x:Key="CheckBoxBorderBrushUnchecked" ResourceKey="SecondaryBrush" />
									<StaticResource x:Key="CheckBoxBackgroundUnchecked" ResourceKey="PrimaryLowBrush" />

									<!-- Unchecked and pressed state -->
									<SolidColorBrush x:Key="CheckBoxBorderBrushUncheckedPressed" Color="Lime" />
									<SolidColorBrush x:Key="CheckBoxBackgroundUncheckedPressed" Color="Navy" />

									<!-- Unchecked and pointer over state -->
									<SolidColorBrush x:Key="CheckBoxBorderBrushUncheckedPointerOver" Color="Maroon" />
									<SolidColorBrush x:Key="CheckBoxBackgroundUncheckedPointerOver" Color="Olive" />
								</example:ResourceDictionary>
							</StackPanel>
						</smtx:XamlDisplay>

						<!-- RadioButton -->
						<smtx:XamlDisplay UniqueKey="LightweightExtensionSamplePage_RadioButton_Material"
										  smtx:XamlDisplayExtensions.Description="The examples contrast ordinary Buttons with others that apply an Extension to override some properties, as defined in the Material/Buttons.xaml ResourceDictionary."
										  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\StackPanel">
							<StackPanel Spacing="40">
								<RadioButton GroupName="RadioButton_Material_A"
											 Content="Default Radio Button Style - Unchecked"
											 Style="{StaticResource MaterialRadioButtonStyle}" />

								<RadioButton GroupName="RadioButton_Material_A"
											 IsChecked="True"
											 Content="Default Radio Button Style - Checked"
											 Style="{StaticResource MaterialRadioButtonStyle}" />

								<RadioButton GroupName="RadioButton_Material_A"
											 Content="Default Radio Button Style - Disabled"
											 IsEnabled="False"
											 Style="{StaticResource MaterialRadioButtonStyle}" />

								<RadioButton GroupName="RadioButton_Material_B"
											 Content="Overridden Radio Button Style - Unchecked"
											 Style="{StaticResource MaterialRadioButtonStyle}"
											 local:ResourceExtensions.OverridePath="ms-appx:///Views/ControlResourcesOverride/Material/RadioButton.xaml" />

								<!-- Material/RadioButton.xaml content: -->
								<example:ResourceDictionary>
									<SolidColorBrush x:Key="RadioButtonForeground" Color="DarkGreen" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseStroke" Color="LightGreen" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedStroke" Color="DarkGreen" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseFill" Color="LightGreen" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedFill" Color="DarkGreen" />

									<SolidColorBrush x:Key="RadioButtonForegroundPointerOver" Color="DarkRed" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseStrokePointerOver" Color="LightPink" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedStrokePointerOver" Color="DarkRed" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseFillPointerOver" Color="LightPink" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedFillPointerOver" Color="DarkRed" />

									<SolidColorBrush x:Key="RadioButtonForegroundPressed" Color="DarkBlue" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseStrokePressed" Color="LightSteelBlue" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedStrokePressed" Color="DarkBlue" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseFillPressed" Color="LightSteelBlue" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedFillPressed" Color="DarkBlue" />

									<SolidColorBrush x:Key="RadioButtonForegroundDisabled" Color="LightSlateGray" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseStrokeDisabled" Color="DarkGray" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedStrokeDisabled" Color="LightSlateGray" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseFillDisabled" Color="DarkGray" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedFillDisabled" Color="LightSlateGray" />
								</example:ResourceDictionary>


								<RadioButton GroupName="RadioButton_Material_B"
											 IsChecked="True"
											 Content="Overridden Radio Button Style - Checked"
											 Style="{StaticResource MaterialRadioButtonStyle}"
											 local:ResourceExtensions.OverridePath="ms-appx:///Views/ControlResourcesOverride/Material/RadioButton.xaml" />

								<RadioButton GroupName="RadioButton_Material_B"
											 Content="Overridden Radio Button Style - Disabled"
											 IsEnabled="False"
											 Style="{StaticResource MaterialRadioButtonStyle}"
											 local:ResourceExtensions.OverridePath="ms-appx:///Views/ControlResourcesOverride/Material/RadioButton.xaml" />
							</StackPanel>
						</smtx:XamlDisplay>
					</StackPanel>
				</DataTemplate>
			</local:SamplePageLayout.MaterialTemplate>
			<local:SamplePageLayout.FluentTemplate>
				<DataTemplate>
					<StackPanel Spacing="20">
						<!-- Button -->
						<smtx:XamlDisplay UniqueKey="LightweightExtensionSamplePage_Button_Fluent"
										  smtx:XamlDisplayExtensions.Description="The examples contrast ordinary Buttons with others that apply an Extension to override some properties, as defined in the Fluent/Buttons.xaml ResourceDictionary."
										  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\StackPanel">
							<StackPanel Spacing="40">
								<Button Content="Default Button Style" />

								<Button Content="Overridden Button Style"
										BorderThickness="2"
										local:ResourceExtensions.OverridePath="ms-appx:///Views/ControlResourcesOverride/Fluent/Button.xaml" />

								<Button Content="Default Button Style - Disabled"
										IsEnabled="False" />

								<Button Content="Overridden Button Style - Disabled"
										BorderThickness="2"
										IsEnabled="False"
										local:ResourceExtensions.OverridePath="ms-appx:///Views/ControlResourcesOverride/Fluent/Button.xaml" />

								<!-- Fluent/Button.xaml content: -->
								<example:ResourceDictionary>
									<SolidColorBrush x:Key="ButtonForeground" Color="DarkGreen" />
									<SolidColorBrush x:Key="ButtonBackground" Color="LightGreen" />
									<SolidColorBrush x:Key="ButtonBorderBrush" Color="DarkGreen" />

									<SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="DarkRed" />
									<SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="LightPink" />
									<SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="DarkRed" />

									<SolidColorBrush x:Key="ButtonForegroundPressed" Color="DarkBlue" />
									<SolidColorBrush x:Key="ButtonBackgroundPressed" Color="LightSteelBlue" />
									<SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="DarkBlue" />

									<SolidColorBrush x:Key="ButtonForegroundDisabled" Color="LightSlateGray" />
									<SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="DarkGray" />
									<SolidColorBrush x:Key="ButtonBorderBrushDisabled" Color="LightSlateGray" />
								</example:ResourceDictionary>

							</StackPanel>
						</smtx:XamlDisplay>

						<!-- TextBox -->
						<smtx:XamlDisplay UniqueKey="LightWeightExtensionSamplePage_FluentTextBox"
										  smtx:XamlDisplayExtensions.Description="The example contrasts an ordinary TextBox with another that employs an Extension to override some properties, as defined in the Fluent/TextBox.xaml ResourceDictionary."
										  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\StackPanel">
							<StackPanel Spacing="24">
								<TextBox PlaceholderText="Default TextBox Style" />

								<TextBox PlaceholderText="Overriden TextBox Style"
										 local:ResourceExtensions.OverridePath="ms-appx:///Views/ControlResourcesOverride/Fluent/TextBox.xaml" />

								<!-- Fluent/TextBox.xaml content: -->
								<example:ResourceDictionary>
									<!-- Default State -->
									<SolidColorBrush x:Key="TextControlForeground" Color="Red" />
									<SolidColorBrush x:Key="TextControlBackground" Color="Cyan" />

									<!-- Pointer Over State -->
									<SolidColorBrush x:Key="TextControlButtonBackgroundPointerOver" Color="Orange" />
									<SolidColorBrush x:Key="TextControlBackgroundPointerOver" Color="Navy" />
									<SolidColorBrush x:Key="TextControlForegroundPointerOver" Color="Gray" />

									<!-- Focused State -->
									<SolidColorBrush x:Key="TextControlForegroundFocused" Color="Yellow" />
									<SolidColorBrush x:Key="TextControlBackgroundFocused" Color="RosyBrown" />
								</example:ResourceDictionary>
							</StackPanel>
						</smtx:XamlDisplay>

						<!-- CheckBox -->
						<smtx:XamlDisplay UniqueKey="LightWeightExtensionSamplePage_FluentCheckBox"
										  smtx:XamlDisplayExtensions.Description="The example contrasts an ordinary TextBox with another that employs an Extension to override some properties, as defined in the Fluent/TextBox.xaml ResourceDictionary."
										  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\StackPanel">
							<StackPanel Spacing="24">
								<CheckBox Content="Default checkbox style"
										  BorderThickness="2" />
								<CheckBox Content="Overridden checkbox style"
										  BorderThickness="2"
										  local:ResourceExtensions.OverridePath="ms-appx:///Views/ControlResourcesOverride/Fluent/Checkbox.xaml" />

								<!-- Fluent/CheckBox.xaml content: -->
								<example:ResourceDictionary>
									<!-- Checked state -->
									<SolidColorBrush x:Key="CheckBoxGlyphForegroundChecked" Color="Red" />
									<SolidColorBrush x:Key="CheckBoxBorderBrushChecked" Color="Green" />
									<SolidColorBrush x:Key="CheckBoxBackgroundChecked" Color="White" />

									<!-- Checked and pointer over state -->
									<SolidColorBrush x:Key="CheckBoxGlyphForegroundCheckedPointerOver" Color="Blue" />
									<SolidColorBrush x:Key="CheckBoxBorderBrushCheckedPointerOver" Color="Yellow" />
									<SolidColorBrush x:Key="CheckBoxBackgroundCheckedPointerOver" Color="Black" />

									<!-- Checked and pressed state -->
									<SolidColorBrush x:Key="CheckBoxGlyphForegroundPressed" Color="Purple" />
									<SolidColorBrush x:Key="CheckBoxBorderBrushCheckedPressed" Color="Silver" />
									<SolidColorBrush x:Key="CheckBoxBackgroundCheckedPressed" Color="Cyan" />

									<!-- Unchecked state -->
									<StaticResource x:Key="CheckBoxBorderBrushUnchecked" ResourceKey="SecondaryBrush" />
									<StaticResource x:Key="CheckBoxBackgroundUnchecked" ResourceKey="PrimaryLowBrush" />

									<!-- Unchecked and pressed state -->
									<SolidColorBrush x:Key="CheckBoxBorderBrushUncheckedPressed" Color="Lime" />
									<SolidColorBrush x:Key="CheckBoxBackgroundUncheckedPressed" Color="Navy" />

									<!-- Unchecked and pointer over state -->
									<SolidColorBrush x:Key="CheckBoxBorderBrushUncheckedPointerOver" Color="Maroon" />
									<SolidColorBrush x:Key="CheckBoxBackgroundUncheckedPointerOver" Color="Olive" />
								</example:ResourceDictionary>

							</StackPanel>
						</smtx:XamlDisplay>

						<!-- RadioButton -->
						<smtx:XamlDisplay UniqueKey="LightweightExtensionSamplePage_RadioButton_Fluent"
										  smtx:XamlDisplayExtensions.Description="The examples contrast standard RadioButtons with others that employ an Extension to override some properties, as defined in the Fluent/RadioButtons.xaml ResourceDictionary."
										  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\StackPanel">
							<StackPanel Spacing="40">
								<RadioButton GroupName="RadioButton_Fluent_A"
											 Content="Default Radio Button Style - Unchecked" />

								<RadioButton GroupName="RadioButton_Fluentl_A"
											 IsChecked="True"
											 Content="Default Radio Button Style - Checked" />

								<RadioButton GroupName="RadioButton_Fluent_A"
											 Content="Default Radio Button Style - Disabled"
											 IsEnabled="False" />

								<RadioButton GroupName="RadioButton_Fluent_B"
											 Content="Overridden Radio Button Style - Unchecked"
											 local:ResourceExtensions.OverridePath="ms-appx:///Views/ControlResourcesOverride/Fluent/RadioButton.xaml" />

								<!-- Fluent/RadioButton.xaml content: -->
								<example:ResourceDictionary>
									<SolidColorBrush x:Key="RadioButtonForeground" Color="DarkGreen" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseStroke" Color="LightGreen" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedStroke" Color="DarkGreen" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseFill" Color="LightGreen" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedFill" Color="DarkGreen" />

									<SolidColorBrush x:Key="RadioButtonForegroundPointerOver" Color="DarkRed" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseStrokePointerOver" Color="LightPink" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedStrokePointerOver" Color="DarkRed" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseFillPointerOver" Color="LightPink" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedFillPointerOver" Color="DarkRed" />

									<SolidColorBrush x:Key="RadioButtonForegroundPressed" Color="DarkBlue" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseStrokePressed" Color="LightSteelBlue" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedStrokePressed" Color="DarkBlue" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseFillPressed" Color="LightSteelBlue" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedFillPressed" Color="DarkBlue" />

									<SolidColorBrush x:Key="RadioButtonForegroundDisabled" Color="LightSlateGray" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseStrokeDisabled" Color="DarkGray" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedStrokeDisabled" Color="LightSlateGray" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseFillDisabled" Color="DarkGray" />
									<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedFillDisabled" Color="LightSlateGray" />
								</example:ResourceDictionary>

								<RadioButton GroupName="RadioButton_Fluent_B"
											 IsChecked="True"
											 Content="Overridden Radio Button Style - Checked"
											 local:ResourceExtensions.OverridePath="ms-appx:///Views/ControlResourcesOverride/Fluent/RadioButton.xaml" />

								<RadioButton GroupName="RadioButton_Fluent_B"
											 Content="Overridden Radio Button Style - Disabled"
											 IsEnabled="False"
											 local:ResourceExtensions.OverridePath="ms-appx:///Views/ControlResourcesOverride/Fluent/RadioButton.xaml" />
							</StackPanel>
						</smtx:XamlDisplay>
					</StackPanel>
				</DataTemplate>
			</local:SamplePageLayout.FluentTemplate>
		</local:SamplePageLayout>
	</Grid>
</Page>
