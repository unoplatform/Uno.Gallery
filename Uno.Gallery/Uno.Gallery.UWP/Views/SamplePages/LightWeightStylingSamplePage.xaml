<Page x:Class="Uno.Gallery.Views.SamplePages.LightweightStylingSamplePage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:local="using:Uno.Gallery"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:um="using:Uno.Material"
	  xmlns:smtx="using:ShowMeTheXAML"
	  xmlns:todo="what should be done"
	  mc:Ignorable="d todo"
	  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

	<Grid>
		<local:SamplePageLayout>
			<local:SamplePageLayout.MaterialTemplate>
				<DataTemplate>
					<StackPanel>
						<!-- Button -->
						<smtx:XamlDisplay UniqueKey="LightweightSamplePage_Button_Material"
										  smtx:XamlDisplayExtensions.Description="The example below contrasts a default button style with a customized one, where the standard properties of foreground, background and border colors are overridden for different states (normal, pointer over, pressed, focused and disabled)."
										  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\StackPanel">
							<StackPanel Spacing="40">
								<Button Content="Default Button Style"
										Style="{StaticResource MaterialFilledButtonStyle}" />

								<Button Content="Overridden Button Style"
										BorderThickness="2"
										Style="{StaticResource MaterialFilledButtonStyle}">

									<Button.Resources>
										<SolidColorBrush x:Key="FilledButtonForeground"
														 Color="DarkGreen" />
										<SolidColorBrush x:Key="FilledButtonBackground"
														 Color="LightGreen" />
										<SolidColorBrush x:Key="FilledButtonBorderBrush"
														 Color="DarkGreen" />

										<SolidColorBrush x:Key="FilledButtonForegroundPointerOver"
														 Color="DarkRed" />
										<SolidColorBrush x:Key="FilledButtonBackgroundPointerOver"
														 Color="LightPink" />
										<SolidColorBrush x:Key="FilledButtonBorderBrushPointerOver"
														 Color="DarkRed" />

										<SolidColorBrush x:Key="FilledButtonForegroundPressed"
														 Color="DarkBlue" />
										<SolidColorBrush x:Key="FilledButtonBackgroundPressed"
														 Color="LightSteelBlue" />
										<SolidColorBrush x:Key="FilledButtonBorderBrushPressed"
														 Color="DarkBlue" />

										<SolidColorBrush x:Key="FilledButtonForegroundFocused"
														 Color="AntiqueWhite" />
										<SolidColorBrush x:Key="FilledButtonBackgroundFocused"
														 Color="DarkMagenta" />
										<SolidColorBrush x:Key="FilledButtonBorderBrushFocused"
														 Color="AntiqueWhite" />
									</Button.Resources>
								</Button>

								<Button Content="Default Button Style - Disabled"
										IsEnabled="False"
										Style="{StaticResource MaterialFilledButtonStyle}" />

								<Button Content="Overridden Button Style - Disabled"
										BorderThickness="2"
										IsEnabled="False"
										Style="{StaticResource MaterialFilledButtonStyle}">

									<Button.Resources>
										<SolidColorBrush x:Key="FilledButtonForegroundDisabled"
														 Color="LightSlateGray" />
										<SolidColorBrush x:Key="FilledButtonBackgroundDisabled"
														 Color="DarkGray" />
										<SolidColorBrush x:Key="FilledButtonBorderBrushDisabled"
														 Color="LightSlateGray" />
									</Button.Resources>
								</Button>

							</StackPanel>
						</smtx:XamlDisplay>


						<!-- TextBox -->
						<smtx:XamlDisplay UniqueKey="LightWeightSamplePage_TextBox"
										  smtx:XamlDisplayExtensions.Header="TextBox"
										  smtx:XamlDisplayExtensions.Description="Compare the two TextBoxes: the left one displays our default style, while the right one showcases a customized look achieved through lightweight styling, demonstrating how individual control appearance can be selectively adjusted."
										  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\StackPanel">
							<StackPanel Orientation="Horizontal"
										Spacing="24">
								<TextBox PlaceholderText="MaterialDefaultTextBoxStyle"
										 Style="{StaticResource MaterialOutlinedTextBoxStyle}" />

								<TextBox PlaceholderText="MaterialDefaultTextBoxStyle"
										 Style="{StaticResource MaterialOutlinedTextBoxStyle}">

									<TextBox.Resources>
										<SolidColorBrush x:Key="OutlinedTextBoxBorderBrush"
														 Color="Red" />
										<StaticResource x:Key="OutlinedTextBoxBorderBrushPointerOver" ResourceKey="SecondaryBrush" />
										<SolidColorBrush x:Key="OutlinedTextBoxBorderBrushFocused"
														 Color="Yellow" />
										<SolidColorBrush x:Key="OutlinedTextBoxPlaceholderForeground"
														 Color="Cyan" />
										<SolidColorBrush x:Key="OutlinedTextBoxPlaceholderForegroundPointerOver"
														 Color="Gold" />
										<SolidColorBrush x:Key="OutlinedTextBoxForegroundFocused"
														 Color="Pink" />
									</TextBox.Resources>
								</TextBox>

							</StackPanel>
						</smtx:XamlDisplay>

						<!-- CheckBox -->
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<smtx:XamlDisplay UniqueKey="LightWeightSamplePage_CheckBox"
											  Margin="0,0,12,0"
											  smtx:XamlDisplayExtensions.Header="CheckBox"
											  smtx:XamlDisplayExtensions.Description="It is possible to change the properties of various texbox using lightweight styling, you can try"
											  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\Grid">
								<Grid>
									<CheckBox Content="Default checkbox"
											  Style="{StaticResource MaterialCheckBoxStyle}" />

								</Grid>
							</smtx:XamlDisplay>
							<smtx:XamlDisplay UniqueKey="LightWeightSamplePage_CheckBoxOverriden"
											  Margin="12,0,0,0"
											  smtx:XamlDisplayExtensions.Header="CheckBox"
											  smtx:XamlDisplayExtensions.Description="It is possible to change the properties of various texbox using lightweight styling, you can try"
											  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\Grid"
											  Grid.Column="1">
								<Grid>
									<CheckBox Content="Overridden checkbox"
											  Style="{StaticResource MaterialCheckBoxStyle}">
										<CheckBox.Resources>
											<SolidColorBrush x:Key="CheckBoxGlyphForegroundChecked"
															 Color="Red" />
											<StaticResource x:Key="CheckBoxGlyphForegroundUnchecked" ResourceKey="SecondaryBrush" />
											<StaticResource x:Key="CheckBoxBorderBrushUnchecked" ResourceKey="SecondaryBrush" />
											<SolidColorBrush x:Key="CheckBoxBorderBrushChecked"
															 Color="Gold" />
											<SolidColorBrush x:Key="CheckBoxGlyphForegroundCheckedPointerOver"
															 Color="Yellow" />
											<SolidColorBrush x:Key="CheckBoxBorderBrushCheckedPressed"
															 Color="Cyan" />
											<SolidColorBrush x:Key="CheckBoxBackgroundUncheckedPointerOver"
															 Color="Pink" />
										</CheckBox.Resources>
									</CheckBox>

								</Grid>
							</smtx:XamlDisplay>
						</Grid>

						<!-- RadioButton -->
						<smtx:XamlDisplay UniqueKey="LightweightSamplePage_RadioButton_Material"
										  smtx:XamlDisplayExtensions.Description="The example below contrasts a default radio button style with a customized one, where the standard properties of foreground, ellipse and ellipse fill colors are overridden for different states (normal, pointer over, pressed and disabled)."
										  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\StackPanel">
							<StackPanel Spacing="40">
								<RadioButton GroupName="RadioButton_Material_A"
											 Content="Default Radio Button Style - Unchecked"
											 Style="{StaticResource MaterialRadioButtonStyle}" />

								<RadioButton GroupName="RadioButton_Material_A"
											 IsChecked="True"
											 Content="Default Radio Button Style - Checked"
											 Style="{StaticResource MaterialRadioButtonStyle}" />

								<RadioButton GroupName="RadioButton_Material_A"
											 Content="Default Radio Button Style - Disabled"
											 IsEnabled="False"
											 Style="{StaticResource MaterialRadioButtonStyle}" />

								<RadioButton GroupName="RadioButton_Material_B"
											 Content="Overridden Radio Button Style - Unchecked"
											 Style="{StaticResource MaterialRadioButtonStyle}">
									<RadioButton.Resources>
										<SolidColorBrush x:Key="RadioButtonForeground"
														 Color="DarkGreen" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseStroke"
														 Color="LightGreen" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedStroke"
														 Color="DarkGreen" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseFill"
														 Color="LightGreen" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedFill"
														 Color="DarkGreen" />

										<SolidColorBrush x:Key="RadioButtonForegroundPointerOver"
														 Color="DarkRed" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseStrokePointerOver"
														 Color="LightPink" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedStrokePointerOver"
														 Color="DarkRed" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseFillPointerOver"
														 Color="LightPink" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedFillPointerOver"
														 Color="DarkRed" />

										<SolidColorBrush x:Key="RadioButtonForegroundPressed"
														 Color="DarkBlue" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseStrokePressed"
														 Color="LightSteelBlue" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedStrokePressed"
														 Color="DarkBlue" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseFillPressed"
														 Color="LightSteelBlue" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedFillPressed"
														 Color="DarkBlue" />
									</RadioButton.Resources>
								</RadioButton>

								<RadioButton GroupName="RadioButton_Material_B"
											 IsChecked="True"
											 Content="Overridden Radio Button Style - Checked"
											 Style="{StaticResource MaterialRadioButtonStyle}">
									<RadioButton.Resources>
										<SolidColorBrush x:Key="RadioButtonForeground"
														 Color="DarkGreen" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseStroke"
														 Color="LightGreen" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedStroke"
														 Color="DarkGreen" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseFill"
														 Color="LightGreen" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedFill"
														 Color="DarkGreen" />

										<SolidColorBrush x:Key="RadioButtonForegroundPointerOver"
														 Color="DarkRed" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseStrokePointerOver"
														 Color="LightPink" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedStrokePointerOver"
														 Color="DarkRed" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseFillPointerOver"
														 Color="LightPink" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedFillPointerOver"
														 Color="DarkRed" />

										<SolidColorBrush x:Key="RadioButtonForegroundPressed"
														 Color="DarkBlue" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseStrokePressed"
														 Color="LightSteelBlue" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedStrokePressed"
														 Color="DarkBlue" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseFillPressed"
														 Color="LightSteelBlue" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedFillPressed"
														 Color="DarkBlue" />
									</RadioButton.Resources>
								</RadioButton>

								<RadioButton GroupName="RadioButton_Material_B"
											 Content="Overridden Radio Button Style - Disabled"
											 IsEnabled="False"
											 Style="{StaticResource MaterialRadioButtonStyle}">
									<RadioButton.Resources>
										<SolidColorBrush x:Key="RadioButtonForegroundDisabled"
														 Color="LightSlateGray" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseStrokeDisabled"
														 Color="DarkGray" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedStrokeDisabled"
														 Color="LightSlateGray" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseFillDisabled"
														 Color="DarkGray" />
										<SolidColorBrush x:Key="RadioButtonOuterEllipseCheckedFillDisabled"
														 Color="LightSlateGray" />
									</RadioButton.Resources>
								</RadioButton>
							</StackPanel>
						</smtx:XamlDisplay>
					</StackPanel>
				</DataTemplate>
			</local:SamplePageLayout.MaterialTemplate>
			<local:SamplePageLayout.FluentTemplate>
				<DataTemplate>
					<StackPanel>
						<!-- TextBox -->
						<smtx:XamlDisplay UniqueKey="LightWeightSamplePage_TextBoxFluent"
										  smtx:XamlDisplayExtensions.Header="TextBox"
										  smtx:XamlDisplayExtensions.Description="Compare the two TextBoxes: the left one displays our default style, while the right one showcases a customized look achieved through lightweight styling, demonstrating how individual control appearance can be selectively adjusted."
										  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\Grid">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<TextBox PlaceholderText="MaterialDefaultTextBoxStyle"
										 Style="{StaticResource MaterialOutlinedTextBoxStyle}"
										 Margin="16" />

								<TextBox PlaceholderText="MaterialDefaultTextBoxStyle"
										 Style="{StaticResource MaterialOutlinedTextBoxStyle}"
										 Grid.Column="1"
										 Margin="16">

									<TextBox.Resources>
										<SolidColorBrush x:Key="OutlinedTextBoxBorderBrush"
														 Color="Red" />
										<StaticResource x:Key="OutlinedTextBoxBorderBrushPointerOver" ResourceKey="SecondaryBrush" />
										<SolidColorBrush x:Key="OutlinedTextBoxBorderBrushFocused"
														 Color="Yellow" />
										<SolidColorBrush x:Key="OutlinedTextBoxPlaceholderForeground"
														 Color="Cyan" />
										<SolidColorBrush x:Key="OutlinedTextBoxPlaceholderForegroundPointerOver"
														 Color="Gold" />
										<SolidColorBrush x:Key="OutlinedTextBoxForegroundFocused"
														 Color="Pink" />
									</TextBox.Resources>
								</TextBox>

							</Grid>
						</smtx:XamlDisplay>

						<!-- CheckBox -->
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<smtx:XamlDisplay UniqueKey="LightWeightSamplePage_CheckBoxFluent"
											  Margin="0,0,12,0"
											  smtx:XamlDisplayExtensions.Header="CheckBox"
											  smtx:XamlDisplayExtensions.Description="It is possible to change the properties of various texbox using lightweight styling, you can try"
											  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\Grid">
								<Grid>
									<CheckBox Content="Default checkbox"
											  Style="{StaticResource MaterialCheckBoxStyle}" />

								</Grid>
							</smtx:XamlDisplay>
							<smtx:XamlDisplay UniqueKey="LightWeightSamplePage_CheckBoxOverridenFluent"
											  Margin="12,0,0,0"
											  smtx:XamlDisplayExtensions.Header="CheckBox"
											  smtx:XamlDisplayExtensions.Description="It is possible to change the properties of various texbox using lightweight styling, you can try"
											  smtx:XamlDisplayExtensions.IgnorePath="XamlDisplay\Grid"
											  Grid.Column="1">
								<Grid>
									<CheckBox Content="Overridden checkbox"
											  Style="{StaticResource MaterialCheckBoxStyle}">
										<CheckBox.Resources>
											<SolidColorBrush x:Key="CheckBoxGlyphForegroundChecked"
															 Color="Red" />
											<StaticResource x:Key="CheckBoxGlyphForegroundUnchecked" ResourceKey="SecondaryBrush" />
											<StaticResource x:Key="CheckBoxBorderBrushUnchecked" ResourceKey="SecondaryBrush" />
											<SolidColorBrush x:Key="CheckBoxBorderBrushChecked"
															 Color="Gold" />
											<SolidColorBrush x:Key="CheckBoxGlyphForegroundCheckedPointerOver"
															 Color="Yellow" />
											<SolidColorBrush x:Key="CheckBoxBorderBrushCheckedPressed"
															 Color="Cyan" />
											<SolidColorBrush x:Key="CheckBoxBackgroundUncheckedPointerOver"
															 Color="Pink" />
										</CheckBox.Resources>
									</CheckBox>

								</Grid>
							</smtx:XamlDisplay>
						</Grid>
					</StackPanel>
				</DataTemplate>
			</local:SamplePageLayout.FluentTemplate>
		</local:SamplePageLayout>
	</Grid>
</Page>
